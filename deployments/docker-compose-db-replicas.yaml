services:

  dbReplica1:
    image: postgres:16.2-alpine3.19
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_SKIP=true
    ports:
      - "5433:5432"
    volumes:
      - dbReplica1-backend-data:/var/lib/postgresql/data/pgdata # именно pgdata получаем из pg_basebackup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otus -d backend"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G

  dbReplica2:
    image: postgres:16.2-alpine3.19
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_SKIP=true
    ports:
      - "5434:5432"
    volumes:
      - dbReplica2-backend-data:/var/lib/postgresql/data/pgdata # именно pgdata получаем из pg_basebackup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otus -d backend"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G

volumes:
  dbReplica1-backend-data:
  dbReplica2-backend-data: