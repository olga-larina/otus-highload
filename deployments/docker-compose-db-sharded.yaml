# см. https://github.com/citusdata/docker/blob/master/docker-compose.yml
# This file is auto generated from it's template,
# see citusdata/tools/packaging_automation/templates/docker/latest/docker-compose.tmpl.yml.
services:
  dbMaster:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: "citusdata/citus:12.1.6"
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &PARAMS_ENV
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - dbMaster-sharded-data:/var/lib/postgresql/data
      - ./sharding/001_set_coordinator_host.sql:/docker-entrypoint-initdb.d/001_set_coordinator_host.sql
  dbManager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [dbMaster]
    environment: 
      <<: *PARAMS_ENV
      CITUS_HOST: "dbMaster"
  dbWorker1:
    image: "citusdata/citus:12.1.6"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [dbManager]
    environment: *PARAMS_ENV
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck # ожидание dbManager
      - worker1-sharded-data:/var/lib/postgresql/data
  dbWorker2:
    image: "citusdata/citus:12.1.6"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [dbManager]
    environment: *PARAMS_ENV
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck # ожидание dbManager
      - worker2-sharded-data:/var/lib/postgresql/data
  # dbWorker3:
  #   image: "citusdata/citus:12.1.6"
  #   labels: ["com.citusdata.role=Worker"]
  #   depends_on: [dbManager]
  #   environment: *PARAMS_ENV
  #   command: "/wait-for-manager.sh"
  #   volumes:
  #     - healthcheck-volume:/healthcheck # ожидание dbManager
  #     - worker3-sharded-data:/var/lib/postgresql/data

volumes:
  dbMaster-sharded-data:
  worker1-sharded-data:
  worker2-sharded-data:
  # worker3-sharded-data:
  healthcheck-volume: