services:

  backend-migrator:
    image: backend-migrator:develop
    build:
      context: ../backend/migrator
      dockerfile: build/migrator/Dockerfile
    environment:
      - DB_URI=${DB_MASTER_URI}
      - DB_TYPE=postgres
    volumes:
      - "../backend/migrator/migrations:/app/migrations"
    restart: on-failure
    depends_on:
      dbMaster:
        condition: service_healthy

  backend-social-server:
    image: backend-social-server:develop
    build:
      context: ../backend
      dockerfile: social/build/server/Dockerfile
    environment:
      - DB_MASTER_URI=${DB_MASTER_URI}
      - DB_REPLICAS_URI=${DB_REPLICAS_URI}
      - DB_MASTER_MAX_CONNS=${DB_MASTER_MAX_CONNS}
      - DB_REPLICAS_MAX_CONNS=${DB_REPLICAS_MAX_CONNS}
      - HTTP_SERVER_HOST=${HTTP_SERVER_SOCIAL_HOST}
      - HTTP_SERVER_PORT=${HTTP_SERVER_SOCIAL_PORT}
      - AUTH_PRIVATE_KEY=${AUTH_PRIVATE_KEY}
      - QUEUE_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/
      - SUBSCRIBERS_CACHE_URI=redis://redis:6379/0?protocol=3&db=0
      - POST_FEED_CACHE_URI=redis://redis:6379/1?protocol=3&db=1
      - ZABBIX_HOST=${ZABBIX_HOST}
      - ZABBIX_PORT=${ZABBIX_PORT}
      - ZABBIX_NAME=social-server
    ports:
      - "8080:8080"
    volumes:
      - "../backend/social/configs/server_config.yaml:/etc/backend/server/config.yaml"
    restart: always
    depends_on:
      backend-migrator:
        condition: service_completed_successfully
      dbMaster:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  backend-dialog-server:
    image: backend-dialog-server:develop
    build:
      context: ../backend
      dockerfile: dialog/build/server/Dockerfile
    environment:
      - DB_MASTER_URI=${DB_MASTER_URI}
      - DB_REPLICAS_URI=${DB_REPLICAS_URI}
      - HTTP_SERVER_HOST=${HTTP_SERVER_DIALOG_HOST}
      - HTTP_SERVER_PORT=${HTTP_SERVER_DIALOG_PORT}
      - AUTH_PRIVATE_KEY=${AUTH_PRIVATE_KEY}
      - TARANTOOL_USER=${TARANTOOL_USER}
      - TARANTOOL_PASSWORD=${TARANTOOL_PASSWORD}
      - TARANTOOL_URI=tarantool:3301
      - ZABBIX_HOST=${ZABBIX_HOST}
      - ZABBIX_PORT=${ZABBIX_PORT}
      - ZABBIX_NAME=dialog-server
    ports:
      - "8081:8080"
    volumes:
      - "../backend/dialog/configs/server_config.yaml:/etc/backend/server/config.yaml"
    restart: always
    # включать в случае использования Postgres вместо Tarantool 
    # depends_on:
    #   backend-migrator:
    #     condition: service_completed_successfully
    #   dbMaster:
    #     condition: service_healthy

  backend-verifier-server: # не подключён к мониторингу
    image: backend-verifier-server:develop
    build:
      context: ../backend
      dockerfile: verifier/build/server/Dockerfile
    environment:
      - QUEUE_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/
    volumes:
      - "../backend/verifier/configs/server_config.yaml:/etc/backend/server/config.yaml"
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
